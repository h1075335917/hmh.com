"use strict";(self.webpackChunkmhuahe_com=self.webpackChunkmhuahe_com||[]).push([[3188],{9098:(t,n,e)=>{e.r(n),e.d(n,{assets:()=>l,contentTitle:()=>s,default:()=>p,frontMatter:()=>a,metadata:()=>o,toc:()=>c});var r=e(4848),i=e(8453);const a={},s=void 0,o={id:"JAVA-Data-Structure",title:"JAVA-Data-Structure",description:"\u679a\u4e3e\uff08Enumeration\uff09",source:"@site/docs/JAVA-Data-Structure.md",sourceDirName:".",slug:"/JAVA-Data-Structure",permalink:"/mhuahe.com/docs/JAVA-Data-Structure",draft:!1,unlisted:!1,editUrl:"https://github.com/mhuahe/mhuahe.com/tree/master/docs/JAVA-Data-Structure.md",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"JAVA-Code-Generation",permalink:"/mhuahe.com/docs/JAVA-Code-Generation"},next:{title:"JAVA-Design-Pattern",permalink:"/mhuahe.com/docs/JAVA-Design-Pattern"}},l={},c=[{value:"\u679a\u4e3e\uff08Enumeration\uff09",id:"\u679a\u4e3eenumeration",level:4},{value:"\u4f4d\u96c6\u5408\uff08BitSet\uff09",id:"\u4f4d\u96c6\u5408bitset",level:4},{value:"\u5411\u91cf\uff08Vector\uff09",id:"\u5411\u91cfvector",level:4},{value:"\u6808\uff08Stack\uff09",id:"\u6808stack",level:4},{value:"\u5b57\u5178\uff08Dictionary\uff09(\u8fc7\u65f6)",id:"\u5b57\u5178dictionary\u8fc7\u65f6",level:4},{value:"\u54c8\u5e0c\u8868\uff08Hashtable\uff09",id:"\u54c8\u5e0c\u8868hashtable",level:4},{value:"\u5c5e\u6027\uff08Properties\uff09",id:"\u5c5e\u6027properties",level:4}];function d(t){const n={code:"code",h4:"h4",pre:"pre",...(0,i.R)(),...t.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.h4,{id:"\u679a\u4e3eenumeration",children:"\u679a\u4e3e\uff08Enumeration\uff09"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-java",children:'/*\r\n\tEnumeration\u63a5\u53e3\u4e2d\u5b9a\u4e49\u4e86\u4e00\u4e9b\u65b9\u6cd5\uff0c\u901a\u8fc7\u8fd9\u4e9b\u65b9\u6cd5\u53ef\u4ee5\u679a\u4e3e\uff08\u4e00\u6b21\u83b7\u5f97\u4e00\u4e2a\uff09\u5bf9\u8c61\u96c6\u5408\u4e2d\u7684\u5143\u7d20\r\n */\r\npublic static void main(String args[]) {\r\n    Enumeration<String> days;\r\n    Vector<String> dayNames = new Vector<String>();\r\n    dayNames.add("Sunday");\r\n    dayNames.add("Monday");\r\n    dayNames.add("Tuesday");\r\n    dayNames.add("Wednesday");\r\n    dayNames.add("Thursday");\r\n    dayNames.add("Friday");\r\n    dayNames.add("Saturday");\r\n    days = dayNames.elements();\r\n    while (days.hasMoreElements()){\r\n        System.out.println(days.nextElement()); \r\n    }\r\n}\n'})}),"\n",(0,r.jsx)(n.h4,{id:"\u4f4d\u96c6\u5408bitset",children:"\u4f4d\u96c6\u5408\uff08BitSet\uff09"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-java",children:' public static void main(String args[]) {\r\n    BitSet bits1 = new BitSet(16);\r\n    BitSet bits2 = new BitSet(16);\r\n    // set some bits\r\n    for(int i=0; i<16; i++) {\r\n        if((i%2) == 0) bits1.set(i);\r\n        if((i%5) != 0) bits2.set(i);\r\n    }\r\n    System.out.println("Initial pattern in bits1: ");\r\n    System.out.println(bits1);\r\n    System.out.println("\\nInitial pattern in bits2: ");\r\n    System.out.println(bits2);\r\n    // AND bits \u903b\u8f91\u4e0e\r\n    bits2.and(bits1);\r\n    System.out.println("\\nbits2 AND bits1: ");\r\n    System.out.println(bits2);\r\n    // OR bits \u903b\u8f91\u6216\r\n    bits2.or(bits1);\r\n    System.out.println("\\nbits2 OR bits1: ");\r\n    System.out.println(bits2);\r\n    // XOR bits \u903b\u8f91\u5f02\u6216\r\n    bits2.xor(bits1);\r\n    System.out.println("\\nbits2 XOR bits1: ");\r\n    System.out.println(bits2);\r\n}\n'})}),"\n",(0,r.jsx)(n.h4,{id:"\u5411\u91cfvector",children:"\u5411\u91cf\uff08Vector\uff09"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-java",children:'public static void main(String args[]) {\r\n    // initial size is 3, increment is 2  \u521d\u59cb\u53163\uff0c\u6269\u5bb92\r\n    Vector v = new Vector(3, 2);\r\n    System.out.println("Initial size: " + v.size());\r\n    System.out.println("Initial capacity: " +\r\n                       v.capacity());\r\n    v.addElement(new Integer(1));\r\n    v.addElement(new Integer(2));\r\n    v.addElement(new Integer(3));\r\n    v.addElement(new Integer(4));\r\n    System.out.println("Capacity after four additions: " +\r\n                       v.capacity());\r\n    v.addElement(new Double(5.45));\r\n    System.out.println("Current capacity: " +\r\n                       v.capacity());\r\n    v.addElement(new Double(6.08));\r\n    v.addElement(new Integer(7));\r\n    System.out.println("Current capacity: " +\r\n                       v.capacity());\r\n    v.addElement(new Float(9.4));\r\n    v.addElement(new Integer(10));\r\n    System.out.println("Current capacity: " +\r\n                       v.capacity());\r\n    v.addElement(new Integer(11));\r\n    v.addElement(new Integer(12));\r\n    System.out.println("First element: " +\r\n                       (Integer)v.firstElement());\r\n    System.out.println("Last element: " +\r\n                       (Integer)v.lastElement());\r\n    if(v.contains(new Integer(3)))\r\n        System.out.println("Vector contains 3.");\r\n    // enumerate the elements in the vector.\r\n    Enumeration vEnum = v.elements();\r\n    System.out.println("\\nElements in vector:");\r\n    while(vEnum.hasMoreElements())\r\n        System.out.print(vEnum.nextElement() + " ");\r\n    System.out.println();\r\n}\n'})}),"\n",(0,r.jsx)(n.h4,{id:"\u6808stack",children:"\u6808\uff08Stack\uff09"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-java",children:'//\u6808\u662fVector\u7684\u4e00\u4e2a\u5b50\u7c7b\uff0c\u5b83\u5b9e\u73b0\u4e86\u4e00\u4e2a\u6807\u51c6\u7684\u540e\u8fdb\u5148\u51fa\uff08LIFO\uff09\u7684\u6808\u3002\r\n/*\r\n\tboolean empty() \u6d4b\u8bd5\u5806\u6808\u662f\u5426\u4e3a\u7a7a\u3002\r\n\tObject peek( ) \u67e5\u770b\u5806\u6808\u9876\u90e8\u7684\u5bf9\u8c61\uff0c\u4f46\u4e0d\u4ece\u5806\u6808\u4e2d\u79fb\u9664\u5b83\u3002\r\n\tObject pop( ) \u79fb\u9664\u5806\u6808\u9876\u90e8\u7684\u5bf9\u8c61\uff0c\u5e76\u4f5c\u4e3a\u6b64\u51fd\u6570\u7684\u503c\u8fd4\u56de\u8be5\u5bf9\u8c61\u3002\r\n\tObject push(Object element) \u628a\u9879\u538b\u5165\u5806\u6808\u9876\u90e8\u3002\r\n\tint search(Object element) \u8fd4\u56de\u5bf9\u8c61\u5728\u5806\u6808\u4e2d\u7684\u4f4d\u7f6e\uff0c\u4ee5 1 \u4e3a\u57fa\u6570\u3002\r\n*/\r\nstatic void showpush(Stack<Integer> st, int a) {\r\n    st.push(new Integer(a));\r\n    System.out.println("push(" + a + ")");\r\n    System.out.println("stack: " + st);\r\n}\r\nstatic void showpop(Stack<Integer> st) {\r\n    System.out.print("pop -> ");\r\n    Integer a = (Integer) st.pop();\r\n    System.out.println(a);\r\n    System.out.println("stack: " + st);\r\n}\r\npublic static void main(String args[]) {\r\n    Stack<Integer> st = new Stack<Integer>();\r\n    System.out.println("stack: " + st);\r\n    showpush(st, 42);\r\n    showpush(st, 66);\r\n    showpush(st, 99);\r\n    showpop(st);\r\n    showpop(st);\r\n    showpop(st);\r\n    try {\r\n        showpop(st);\r\n    } catch (EmptyStackException e) {\r\n        System.out.println("empty stack");\r\n    }\r\n}\n'})}),"\n",(0,r.jsx)(n.h4,{id:"\u5b57\u5178dictionary\u8fc7\u65f6",children:"\u5b57\u5178\uff08Dictionary\uff09(\u8fc7\u65f6)"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:"\u7c7b\u4f3c\u4e0emap\uff0c\u952e\u503c\u5bf9\u5f62\u5f0f\u3002\u4ee5\u952e\u53d6\u503c\u3002\n"})}),"\n",(0,r.jsx)(n.h4,{id:"\u54c8\u5e0c\u8868hashtable",children:"\u54c8\u5e0c\u8868\uff08Hashtable\uff09"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:"Hashtable\u662f\u539f\u59cb\u7684java.util\u7684\u4e00\u90e8\u5206\uff0c \u662f\u4e00\u4e2aDictionary\u5177\u4f53\u7684\u5b9e\u73b0 \u3002\r\nava 2 \u91cd\u6784\u7684Hashtable\u5b9e\u73b0\u4e86Map\u63a5\u53e3\uff0c\u56e0\u6b64\uff0cHashtable\u73b0\u5728\u96c6\u6210\u5230\u4e86\u96c6\u5408\u6846\u67b6\u4e2d\u3002\u5b83\u548cHashMap\u7c7b\u5f88\u76f8\u4f3c\uff0c\u4f46\u662f\u5b83\u652f\u6301\u540c\u6b65\u3002\n"})}),"\n",(0,r.jsx)(n.h4,{id:"\u5c5e\u6027properties",children:"\u5c5e\u6027\uff08Properties\uff09"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-java",children:'/*\r\n\tString getProperty(String key) \u7528\u6307\u5b9a\u7684\u952e\u5728\u6b64\u5c5e\u6027\u5217\u8868\u4e2d\u641c\u7d22\u5c5e\u6027\u3002\r\n\tString getProperty(String key, String defaultProperty)\r\n\tvoid list(PrintStream streamOut) \u5c06\u5c5e\u6027\u5217\u8868\u8f93\u51fa\u5230\u6307\u5b9a\u7684\u8f93\u51fa\u6d41\u3002\r\n\tvoid list(PrintWriter streamOut)\r\n\tvoid load(InputStream streamIn)  \u4ece\u8f93\u5165\u6d41\u4e2d\u8bfb\u53d6\u5c5e\u6027\u5217\u8868\uff08\u952e\u548c\u5143\u7d20\u5bf9\uff09\r\n\tEnumeration propertyNames( ) \u6309\u7b80\u5355\u7684\u9762\u5411\u884c\u7684\u683c\u5f0f\u4ece\u8f93\u5165\u5b57\u7b26\u6d41\u4e2d\u8bfb\u53d6\u5c5e\u6027\u5217\u8868\uff08\u952e\u548c\u5143\u7d20\u5bf9\uff09\r\n\tObject setProperty(String key, String value) \u8c03\u7528 Hashtable \u7684\u65b9\u6cd5 put\r\n\tvoid store(OutputStream streamOut, String description) \u4ee5\u9002\u5408\u4f7f\u7528load(InputStream)\u65b9\u6cd5\u52a0\u8f7d\u5230Properties\u8868\u4e2d\u7684\u683c\u5f0f\uff0c\u5c06\u6b64 Properties \u8868\u4e2d\u7684\u5c5e\u6027\u5217\u8868\uff08\u952e\u548c\u5143\u7d20\u5bf9\uff09\u5199\u5165\u8f93\u51fa\u6d41\u3002\r\n*/\r\npublic static void main(String args[]) {\r\n    Properties capitals = new Properties();\r\n    Set states;\r\n    String str;\r\n    capitals.put("Illinois", "Springfield");\r\n    capitals.put("Missouri", "Jefferson City");\r\n    capitals.put("Washington", "Olympia");\r\n    capitals.put("California", "Sacramento");\r\n    capitals.put("Indiana", "Indianapolis");\r\n    // Show all states and capitals in hashtable.\r\n    states = capitals.keySet(); // get set-view of keys\r\n    Iterator itr = states.iterator();\r\n    while(itr.hasNext()) {\r\n        str = (String) itr.next();\r\n        System.out.println("The capital of " +\r\n                           str + " is " + capitals.getProperty(str) + ".");\r\n    }\r\n    System.out.println();\r\n    // look for state not in list -- specify default\r\n    str = capitals.getProperty("Florida", "Not Found");\r\n    System.out.println("The capital of Florida is "\r\n                       + str + ".");\r\n}\n'})})]})}function p(t={}){const{wrapper:n}={...(0,i.R)(),...t.components};return n?(0,r.jsx)(n,{...t,children:(0,r.jsx)(d,{...t})}):d(t)}},8453:(t,n,e)=>{e.d(n,{R:()=>s,x:()=>o});var r=e(6540);const i={},a=r.createContext(i);function s(t){const n=r.useContext(a);return r.useMemo((function(){return"function"==typeof t?t(n):{...n,...t}}),[n,t])}function o(t){let n;return n=t.disableParentContext?"function"==typeof t.components?t.components(i):t.components||i:s(t.components),r.createElement(a.Provider,{value:n},t.children)}}}]);